// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package v1

// CreateSandboxRequest defines model for CreateSandboxRequest.
type CreateSandboxRequest struct {
	// Name The name of the sandbox. If not specified, will be generated automatically.
	Name string `json:"name,omitempty"`

	// Spec The specification of a Sandbox.
	Spec SandboxSpec `json:"spec"`
}

// Error defines model for Error.
type Error struct {
	// Message The error message.
	Message string `json:"message"`
}

// RunIPythonCellRequest The cell to run.
type RunIPythonCellRequest struct {
	// Code The code to run in the IPython kernel.
	Code string `json:"code"`

	// SplitOutput Set to true to split the output into stdout and stderr. If set, the output field in the response will be empty and the stdout and stderr fields will be populated.
	SplitOutput bool `json:"split_output,omitempty"`
}

// RunIPythonCellResult The result from the IPython kernel.
type RunIPythonCellResult struct {
	// Output The stdout and stderr from the IPython kernel interleaved.
	Output string `json:"output,omitempty"`

	// Stderr The stderr from the IPython kernel.
	Stderr string `json:"stderr,omitempty"`

	// Stdout The stdout from the IPython kernel.
	Stdout string `json:"stdout,omitempty"`
}

// RunShellCommandRequest The command to run.
type RunShellCommandRequest struct {
	// Command The command to execute.
	Command string `json:"command"`

	// SplitOutput Set to true to split the output into stdout and stderr. If set, the output field in the response will be empty and the stdout and stderr fields will be populated.
	SplitOutput bool `json:"split_output,omitempty"`
}

// RunShellCommandResult The result from the shell command.
type RunShellCommandResult struct {
	// Output The stdout and stderr from the shell command.
	Output string `json:"output,omitempty"`

	// Stderr The stderr from the shell command.
	Stderr string `json:"stderr,omitempty"`

	// Stdout The stdout from the shell command
	Stdout string `json:"stdout,omitempty"`
}

// Sandbox A sandbox environment for running code and commands.
type Sandbox struct {
	// Name The name of the sandbox.
	Name string `json:"name,omitempty"`

	// Spec The specification of a Sandbox.
	Spec SandboxSpec `json:"spec"`

	// Status The status of the Sandbox.
	Status *SandboxStatus `json:"status,omitempty"`

	// UID An identifier that is unique to the instance (in time) of the sandbox.
	UID string `json:"uid,omitempty"`
}

// SandboxSpec The specification of a Sandbox.
type SandboxSpec struct {
	// Env Environment variables for the sandbox.
	Env map[string]string `json:"env,omitempty"`

	// Image The container image the sandbox will run with.
	Image string `json:"image,omitempty"`
}

// SandboxStatus The status of the Sandbox.
type SandboxStatus = map[string]interface{}

// CreateSandboxJSONRequestBody defines body for CreateSandbox for application/json ContentType.
type CreateSandboxJSONRequestBody = CreateSandboxRequest

// RunIPythonCellJSONRequestBody defines body for RunIPythonCell for application/json ContentType.
type RunIPythonCellJSONRequestBody = RunIPythonCellRequest

// RunShellCommandJSONRequestBody defines body for RunShellCommand for application/json ContentType.
type RunShellCommandJSONRequestBody = RunShellCommandRequest
